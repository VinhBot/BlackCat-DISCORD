import { commandBuilder as CommandBuilder, getFileNameAndFolder } from "blackcat.js";
import { EmbedBuilders } from "../../../Handlers/functions.js";
const cmdName = getFileNameAndFolder(import.meta.url);

class PingCommand extends CommandBuilder {
  constructor() {
    super({
      name: cmdName.fileName.name, // T√™n L·ªánh ch√≠nh
      usage: cmdName.fileName.name, // C√°ch s·ª≠ d·ª•ng khi d√πng l·ªánh help.
      category: cmdName.folderName.name, // th·ªÉ lo·∫°i l·ªánh
      aliases: ["pong", "pings", "pingbot", "botping"], // l·ªánh ph·ª•
      description: "Hi·ªÉn th·ªã ping c·ªßa bot", // m√¥ t·∫£ d√†nh cho l·ªánh
      cooldown: 5, // th·ªùi gian h·ªìi l·ªánh
      owner: false, // b·∫≠t t·∫Øt ch·∫ø ƒë·ªô dev
      permissions: [] // quy·ªÅn h·∫°n khi s·ª≠ d·ª•ng l·ªánh
    });
    // console.log(super.toJSON()); // xu·∫•t ra th√¥ng tin d∆∞·ªõi d·∫°ng json
  };
  /** 
   * @Info - Th·ª±c hi·ªán l·ªánh khi ƒë∆∞·ª£c y√™u c·∫ßu
   * @info client: ƒê·∫°i di·ªán cho ƒë·ªëi t∆∞·ª£ng Discord.Client, th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi API Discord.
   * @info message: ƒê·ªëi t∆∞·ª£ng bi·ªÉu di·ªÖn tin nh·∫Øn trong Discord, ch·ª©a th√¥ng tin v·ªÅ tin nh·∫Øn v√† ng∆∞·ªùi g·ª≠i.
   * @info args: M·∫£ng ch·ª©a c√°c ƒë·ªëi s·ªë ƒë∆∞·ª£c truy·ªÅn v√†o l·ªánh, th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x·ª≠ l√Ω th√™m th√¥ng tin t·ª´ ng∆∞·ªùi d√πng.
   * @info prefix: Ti·ªÅn t·ªë ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ k√≠ch ho·∫°t l·ªánh, gi√∫p bot nh·∫≠n bi·∫øt khi n√†o ng∆∞·ªùi d√πng mu·ªën s·ª≠ d·ª•ng l·ªánh.
   */
  async executeCommand({ client, message, args, prefix }) {
    const pingImageArr = [
      "https://cdn.discordapp.com/attachments/892794857905602560/892794900863660062/63e1657a8a6249a2fc9c062b17f27ce0.gif",
      "https://cdn.discordapp.com/attachments/892794857905602560/892795017104613376/dc87c9ea90b4b7d02a0cbe5de256d385.gif",
      "https://cdn.discordapp.com/attachments/892794857905602560/892795143093108806/a665463e60ef772c82286e4ee6a15353.gif",
      "https://cdn.discordapp.com/attachments/892794857905602560/892795222986207293/4a3a4f44524556704c29879feeba0c23.gif",
      "https://cdn.discordapp.com/attachments/892794857905602560/892795292573913098/534d38d35eb761ad11e43fe378c3de29.gif",
      "https://cdn.discordapp.com/attachments/892794857905602560/892795346172928080/c17166b2af1a743b149e1eb0f3203db4.gif",
      "https://cdn.discordapp.com/attachments/892794857905602560/892795432797872188/6619fe492c713eb3051ab7568181dbdd.gif"
    ];
    const Ping = client.ws.ping;
    let Color;
    if (Ping <= 300) {
      Color = "#00ff00";
    } else if (Ping > 300 && Ping < 600) {
      Color = "#ffff00";
    } else if (Ping >= 600 && Ping < 900) {
      Color = "#ffa500";
    } else if (Ping >= 900) {
      Color = "#ff0000";
    };
    const loadingEmbed = new EmbedBuilders({
      title: { name: 'üèì Pong' },
      description: "***ƒêang t·∫£i d·ªØ li·ªáu...*** üí¨",
      thumbnail: pingImageArr[Math.floor(Math.random() * pingImageArr.length)],
      colors: "Random"
    });
    const pingEmbed = new EmbedBuilders({
      title: { name: 'üèì Pong' },
      colors: "Random",
      fields: [
        { name: "Nh·ªãp websocket", value: `\`\`\`yaml\n${Ping} Ms\`\`\``, inline: true },
        { name: "ƒê·ªô tr·ªÖ kh·ª© h·ªìi", value: `\`\`\`yaml\n${Math.abs(message.createdTimestamp - Date.now())} Ms\`\`\``, inline: true },
        { name: "ƒê·ªô tr·ªÖ API", value: `\`\`\`yaml\n${Math.round(client.ws.ping)} Ms\`\`\``, inline: true },
        { name: "S·ª≠ d·ª•ng b·ªô nh·ªõ", value: `\`\`\`yaml\n${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)} MB\`\`\``, inline: true },
      ]
    });
    const msg = await message.channel.send({ embeds: [loadingEmbed] });
    setTimeout(() => {
        msg.edit({ embeds: [pingEmbed] });
    }, 3001);
  };
};

export default new PingCommand();